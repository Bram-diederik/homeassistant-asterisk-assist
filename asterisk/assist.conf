[assist_en]
exten => start,1,Answer()
 same => n,Set(NEW_FLAG_FILE=/tmp/assist_session_started_${UNIQUEID})
 same => n,SET(CI=${UNIQUEID})
 same => n,Playback(${SHELL(/opt/homeassistant-asterisk-assist/tts/tts.py --long en "talk after the beep press 0 for menu 1 to skip me talking")})

 same => n(loop),Set(RECORD_FILE=/tmp/rec_${UNIQUEID}.wav)
 same => n,Set(TRANSCRIPT_FILE=/tmp/stt_${UNIQUEID}.txt)
 same => n,Set(RESPONSE_FILE=/tmp/assist_response_${UNIQUEID}.txt)

 same => n,Record(${RECORD_FILE},4,45,ko)

 same => n,ExecIf($["${RECORD_STATUS}" = "OPERATOR"]?Goto(menu,start,1)

 same => n,Playback(${SHELL(/opt/homeassistant-asterisk-assist/tts/tts.py --long en "processing")})

 same => n,TrySystem(/opt/homeassistant-asterisk-assist/stt/stt.py --lang en ${RECORD_FILE} ${TRANSCRIPT_FILE} || echo '!null!' > ${TRANSCRIPT_FILE} &)

 same => n(wait_txt),TrySystem(test -s ${TRANSCRIPT_FILE})
 same => n,GotoIf($["${SYSTEMSTATUS}" = "SUCCESS"]?send_to_agent)
 same => n,Wait(0.5)
 same => n,Goto(wait_txt)

 same => n(send_to_agent),Set(TRANSCRIPT=${SHELL(cat ${TRANSCRIPT_FILE})})
 same => n,NoOp(Transcript: ${TRANSCRIPT})
 same => n,GotoIf($[${REGEX("!null!" ${TRANSCRIPT})}]?loop)

 same => n,ExecIf($["${STAT(e,${NEW_FLAG_FILE})}" = "1"]?TrySystem(/opt/cmdline-assist/assist.py  --ci ${CI}  --cli "${TRANSCRIPT}" > ${RESPONSE_FILE}))
 same => n,ExecIf($["${STAT(e,${NEW_FLAG_FILE})}" = "0"]?TrySystem(/opt/cmdline-assist/assist.py  --ci ${CI}  --cli --new "${TRANSCRIPT}" > ${RESPONSE_FILE}))
 same => n,ExecIf($["${STAT(e,${NEW_FLAG_FILE})}" = "0"]?TrySystem(touch ${NEW_FLAG_FILE}))

 same => n,Set(ASSIST_OUT=${SHELL(cat ${RESPONSE_FILE} | tr -d '"'\''*[]')})
 same => n,NoOp(Assistant said: ${ASSIST_OUT})
 same => n,Background(${SHELL(/opt/homeassistant-asterisk-assist/tts/tts.py --long en "${ASSIST_OUT}")})

 same => n,Wait(1)
 same => n,System(rm ${RECORD_FILE} ${TRANSCRIPT_FILE} ${RESPONSE_FILE})
 same => n,Goto(loop)

exten => 0,1,Goto(menu,start,1)

exten => e,1,goto(start,loop)


[assist_nl]
exten => start,1,Answer()
 same => n,Set(NEW_FLAG_FILE=/tmp/assist_session_started_${UNIQUEID})
 same => n,SET(CI=${UNIQUEID})
 same => n,Playback(${SHELL(/opt/homeassistant-asterisk-assist/tts/tts.py nl "spreek na de piep. druk 0 voor menu 1 voor het stoppen van mijn reactie")})

 same => n(loop),Set(RECORD_FILE=/tmp/rec_${UNIQUEID}.wav)
 same => n,Set(TRANSCRIPT_FILE=/tmp/stt_${UNIQUEID}.txt)
 same => n,Set(RESPONSE_FILE=/tmp/assist_response_${UNIQUEID}.txt)

 same => n,Record(${RECORD_FILE},4,45,ko)

 same => n,ExecIf($["${RECORD_STATUS}" = "OPERATOR"]?Goto(menu,start,1)

 same => n,Playback(${SHELL(/opt/homeassistant-asterisk-assist/tts/tts.py nl "verwerken")})

 same => n,TrySystem(/opt/homeassistant-asterisk-assist/stt/stt.py --lang nl ${RECORD_FILE} ${TRANSCRIPT_FILE} || echo '!null!' > ${TRANSCRIPT_FILE} &)

 same => n(wait_txt),TrySystem(test -s ${TRANSCRIPT_FILE})
 same => n,GotoIf($["${SYSTEMSTATUS}" = "SUCCESS"]?send_to_agent)
 same => n,Wait(0.5)
 same => n,Goto(wait_txt)

 same => n(send_to_agent),Set(TRANSCRIPT=${SHELL(cat ${TRANSCRIPT_FILE})})
 same => n,NoOp(Transcript: ${TRANSCRIPT})
 same => n,GotoIf($[${REGEX("!null!" ${TRANSCRIPT})}]?loop)

 same => n,ExecIf($["${STAT(e,${NEW_FLAG_FILE})}" = "1"]?TrySystem(/opt/cmdline-assist/assist.py  --ci ${CI}  --cli -a <DUTCH AGENT> "${TRANSCRIPT}" > ${RESPONSE_FILE}))
 same => n,ExecIf($["${STAT(e,${NEW_FLAG_FILE})}" = "0"]?TrySystem(/opt/cmdline-assist/assist.py  --ci ${CI}  --cli --new -a <DUTCH AGENT> "${TRANSCRIPT}" > ${RESPONSE_FILE}))
 same => n,ExecIf($["${STAT(e,${NEW_FLAG_FILE})}" = "0"]?TrySystem(touch ${NEW_FLAG_FILE}))

 same => n,Set(ASSIST_OUT=${SHELL(cat ${RESPONSE_FILE} | tr -d '"'\''*[]')})
 same => n,NoOp(Assistant said: ${ASSIST_OUT})
 same => n,Background(${SHELL(/opt/homeassistant-asterisk-assist/tts/tts.py --long nl "${ASSIST_OUT}")})

 same => n,Wait(1)
 same => n,System(rm ${RECORD_FILE} ${TRANSCRIPT_FILE} ${RESPONSE_FILE})
 same => n,Goto(loop)

 exten => 0,1,Goto(menu_nl,start,1)

exten => e,1,goto(start,loop)
